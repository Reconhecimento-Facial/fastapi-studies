"""Corrigindo campo created_at para datetime. Adicionado campo updated_at no modelo User

Revision ID: dce6f7b46c6e
Revises: 7b4cf720d2e1
Create Date: 2024-09-05 02:19:27.329791

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dce6f7b46c6e'
down_revision: Union[str, None] = '7b4cf720d2e1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    
    op.create_table('users_temp',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), onupdate=sa.text('(CURRENT_TIMESTAMP)'), server_onupdate=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )

    #copie a tabela antiga para a nova
    op.execute('''
        INSERT INTO users_temp (id, username, password, email, created_at) 
        SELECT id, username, password, email, created_at FROM users
    ''')
    op.drop_table('users')
    op.rename_table('users_temp', 'users')

    op.execute('''
        CREATE TRIGGER update_users_updated_at
        AFTER UPDATE ON users
        FOR EACH ROW
        BEGIN
            UPDATE users SET updated_at = CURRENT_TIMESTAMP WHERE id = OLD.id;
        END;
    ''')


def downgrade() -> None:

    op.execute('DROP TRIGGER IF EXISTS update_users_updated_at')

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_temp',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('created_at', sa.String(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )

    op.execute('''
        INSERT INTO users_temp (id, username, password, email, created_at) 
        SELECT id, username, password, email, created_at FROM users
    ''')
    op.drop_table('users')
    op.rename_table('users_temp', 'users')
    # ### end Alembic commands ###
